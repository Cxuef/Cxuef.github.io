{"meta":{"title":"Welcome to my blog ~","subtitle":"世界上最幸福的事莫过于有能力做自己喜欢的事！","description":"Tomrrow is a new day !","author":"Eirot Chen","url":"http://cxuef.github.io"},"pages":[],"posts":[{"title":"【置顶】搭建nginx rtmp直播服务器，ffmpeg模拟推流","slug":"【置顶】搭建nginx-rtmp直播服务器，ffmpeg模拟推流","date":"2076-02-26T01:21:22.000Z","updated":"2018-07-14T04:01:23.000Z","comments":true,"path":"linux/【置顶】搭建nginx-rtmp直播服务器，ffmpeg模拟推流/","link":"","permalink":"http://cxuef.github.io/linux/【置顶】搭建nginx-rtmp直播服务器，ffmpeg模拟推流/","excerpt":"Nginx本身是一个非常出色的HTTP服务器，FFMPEG是非常好的音视频解决方案。这两个东西通过一个nginx的模块nginx-rtmp-module，组合在一起即可以搭建一个功能相对比较完善并可支持RTMP和HLS的流媒体服务器。nginx配合ffmpeg做流媒体服务器的原理是：nginx通过rtmp模块提供rtmp服务，ffmpeg推送一个rtmp流到nginx，然后客户端通过访问nginx来收看实时视频流。HLS也是差不多的原理，只是最终客户端是通过HTTP协议来访问的,但是ffmpeg推送流仍然是rtmp的。","text":"Nginx本身是一个非常出色的HTTP服务器，FFMPEG是非常好的音视频解决方案。这两个东西通过一个nginx的模块nginx-rtmp-module，组合在一起即可以搭建一个功能相对比较完善并可支持RTMP和HLS的流媒体服务器。nginx配合ffmpeg做流媒体服务器的原理是：nginx通过rtmp模块提供rtmp服务，ffmpeg推送一个rtmp流到nginx，然后客户端通过访问nginx来收看实时视频流。HLS也是差不多的原理，只是最终客户端是通过HTTP协议来访问的,但是ffmpeg推送流仍然是rtmp的。 好啦，现在开始进入主题吧~ 1. 从github下载nginx-rtmp-module eirot@ubuntu64:~/MyDev$ git clone https://github.com/arut/nginx-rtmp-module.git 2. 下载nginx压缩包并解压 http://nginx.org/en/download.html 3. 解压nginx-1.11.1.tar.gz并进入查看 eirot@ubuntu64:~/MyDev$ tar -xvf nginx-1.11.1.tar.gz 4. 配置nginx eirot@ubuntu64:~/MyDev/nginx-1.11.1$ ./configure –prefix=/usr/local/nginx –add-module=/home/eirot/MyDev/nginx-rtmp-module –with-http_ssl_module –with-debug 【注意】如果安装失败，请检查系统是否有PCRE、OpenSSL、zlib 等library 5. 直接开始make nginx-rtmp-module eirot@ubuntu64:~/MyDev/nginx-1.11.1$ make 6. 然而出错啦！好吧，修改/home/eirot/MyDev/nginx-rtmp-module/ngx_rtmp_core_module.c中的memcpy函数参数类型 7. 修改后再次make，没有报错得到*.o编译输出 eirot@ubuntu64:~/MyDev/nginx-1.11.1$ make 8. OK之后，执行make install eirot@ubuntu64:~/MyDev/nginx-1.11.1$ sudo make install 9. 检查/usr/local/nginx/sbin/下是否有生成nginx 10. 修改nginx.conf，添加rtmp配置项（端口和服务名可以自己修改） 123456789101112131415rtmp &#123; server &#123; listen 1935; chunk_size 4096; application myapp &#123; live on; &#125; application hls &#123; live on; hls on; hls_path /tmp/hls; &#125; &#125;&#125; 别忘了执行sudo ./nginx -c nginx.conf使配置生效！ 11. 启动nginx eirot@ubuntu64:/usr/local/nginx/sbin$ sudo ./nginx 12. 检查端口是否占用 eirot@ubuntu64:/usr/local/nginx/sbin$ netstat -ntlp 13. 在浏览器输入localhost，看是否能成功进入nginx的欢迎页面 14. 用ffmpeg产生一个模拟直播源，向rtmp服务器推送 eirot@ubuntu64:~/MyDev/video$ ffmpeg -re -i test.flv -f flv rtmp://192.168.242.172/myapp/test1 eirot@ubuntu64:~/MyDev/video$ ffmpeg -re -i Caminandes.mp4 -vprofile baseline -vcodec copy -acodec copy -strict -2 -f flv rtmp://192.168.242.172/myapp/test2 15.使用ffplayer或者vlc播放rtmp流 eirot@ubuntu64:~/MyDev/video$ ffplay rtmp://192.168.242.172/myapp/test1 参考bloghttps://github.com/arut/nginx-rtmp-module http://blog.csdn.net/zgl_dm/article/details/8167128 http://www.cnblogs.com/wainiwann/p/3866254.html http://www.thinksaas.cn/topics/0/277/277674.html http://redstarofsleep.iteye.com/blog/2123752 http://blog.csdn.net/ygm_linux/article/details/49978119 http://www.cnblogs.com/haibindev/archive/2013/01/30/2880764.html http://www.w2bc.com/article/124934","categories":[{"name":"linux","slug":"linux","permalink":"http://cxuef.github.io/categories/linux/"}],"tags":[{"name":"ffmpeg","slug":"ffmpeg","permalink":"http://cxuef.github.io/tags/ffmpeg/"},{"name":"nginx","slug":"nginx","permalink":"http://cxuef.github.io/tags/nginx/"},{"name":"rtmp","slug":"rtmp","permalink":"http://cxuef.github.io/tags/rtmp/"}]},{"title":"Android P Camera2 preview work flow","slug":"Android-P-Camera2-preview-work-flow","date":"2018-07-14T02:48:53.000Z","updated":"2018-07-14T02:51:54.000Z","comments":true,"path":"android/Android-P-Camera2-preview-work-flow/","link":"","permalink":"http://cxuef.github.io/android/Android-P-Camera2-preview-work-flow/","excerpt":"","text":"Just test four new env","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"Android Studio","slug":"Android-Studio","permalink":"http://cxuef.github.io/tags/Android-Studio/"}]},{"title":"Android Studio上Native方式使用OpenCV","slug":"Android-Studio上Native方式使用OpenCV","date":"2016-11-28T02:46:21.000Z","updated":"2018-07-14T07:38:01.810Z","comments":true,"path":"android/Android-Studio上Native方式使用OpenCV/","link":"","permalink":"http://cxuef.github.io/android/Android-Studio上Native方式使用OpenCV/","excerpt":"开始之前先说下native方式使用OpenCV的好处吧，坏处我不说，嘿嘿。 native函数执行效率高，速度快 不用安装可恶的OpenCVManger.apk 大量可复用C++代码，不用苦逼地查找这个api在java的哪个类","text":"开始之前先说下native方式使用OpenCV的好处吧，坏处我不说，嘿嘿。 native函数执行效率高，速度快 不用安装可恶的OpenCVManger.apk 大量可复用C++代码，不用苦逼地查找这个api在java的哪个类 好啦，直奔主题喽。新建项目的过程这里也不赘述了，我们直接看关键的修改地方吧。 1. 新建app\\src\\main\\jni\\Android.mk文件，内容如下： 12345678910111213141516LOCAL_PATH := $(call my-dir)include $(CLEAR_VARS)#opencvinclude /home/eirot/MyDev/Opencv/OpenCV-android-sdk/sdk/native/jni/OpenCV.mkOPENCV_CAMERA_MODULES:=onOPENCV_INSTALL_MODULES:=onOPENCV_LIB_TYPE:=SHAREDLOCAL_SRC_FILES := GrayProcess.cppLOCAL_LDLIBS += -llogLOCAL_MODULE := grayprocessinclude $(BUILD_SHARED_LIBRARY) 其中，/home/eirot/MyDev/Opencv/OpenCV-android-sdk/sdk/native/jni/OpenCV.mk要指向你自己的OpenCV Android SDK中对应文件的位置。OPENCV_CAMERA_MODULES:=on 说明要使用摄像头功能，我们的demo中虽然没有用到，但是平时写程序时经常会忘记在这里添加，所以一并写上了。OPENCV_INSTALL_MODULES:=on 可以理解为，编译器自动把OpenCV-android-sdk\\sdk\\native\\libs\\armeabi-v7a\\libopencv_java3.so拷贝并打包在最终的apk中（目标架构armeabi-v7a因目标设备而定），这也是不需要我们手动向项目内添加任何OpenCV相关库文件的原因。LOCAL_SRC_FILES 是需要编译的C/C++源码文件，如果有多个文件，只需要用空格将文件名分隔，如果文件名太多需要换行，则在前一行行末添加一个“\\”符号即可。LOCAL_MODULE 是编译产生的.so库的名称，应该与MainActivity.java中通过System.loadLibrary(“grayprocess”);调用的库名称一致。 2. 新建app\\src\\main\\jni\\Application.mk文件，内容如下： 1234APP_STL := gnustl_sharedAPP_CPPFLAGS := -frtti -fexceptions -std=c++11APP_ABI := armeabi-v7a arm64-v8aAPP_PLATFORM := android-21 其中，APP_CPPFLAGS中的-std=c++11表示开启C++11支持。APP_ABI规定了NDK编译的目标平台。APP_PLATFORM指定了NDK编译针对的平台，其取值应该尽量与app\\build.gradle中的minSdkVersion相一致。参考这里：http://stackoverflow.com/a/21982908/3829845。 3. 配置build.gradle文件 这里的build.gradle是指app模块下的build.gradle，不是整个工程的build.gradle文件。在模块的build.gradle的defaultConfig下加入以下配置：123456789101112131415161718192021222324252627282930313233343536373839404142import org.apache.tools.ant.taskdefs.condition.Osapply plugin: 'com.android.application'android &#123; compileSdkVersion 24 buildToolsVersion \"24.0.2\" defaultConfig &#123; applicationId \"com.ckt.eirot.opencv4jni\" minSdkVersion 21 targetSdkVersion 23 versionCode 1 versionName \"1.0\" testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\" ndk &#123; moduleName \"grayprocess\" ldLibs \"log\", \"z\", \"m\" abiFilters \"armeabi\", \"armeabi-v7a\", \"armeabi-v8a\" &#125; &#125; sourceSets.main &#123; jniLibs.srcDirs = ['src/main/libs', 'src/main/jniLibs'] jni.srcDirs = [] //disable automatic ndk-build call &#125; // call regular ndk-build(.cmd) script from app directory task ndkBuild(type: Exec) &#123; Properties properties = new Properties() properties.load(project.rootProject.file('local.properties').newDataInputStream()) def ndkDir = properties.getProperty('ndk.dir') if (Os.isFamily(Os.FAMILY_WINDOWS)) &#123; commandLine \"$ndkDir/ndk-build.cmd\", '-C', file('src/main/jni').absolutePath &#125; else &#123; commandLine \"$ndkDir/ndk-build\", '-C', file('src/main/jni').absolutePath &#125; &#125; tasks.withType(JavaCompile) &#123; compileTask -&gt; compileTask.dependsOn ndkBuild &#125;&#125; 4. 配置gradle.properties文件 打开工程目录下的gradle.properties文件（注意不是build.gradle，而是gradle.properties），在文件的最后一行加入: android.useDeprecatedNdk=true 5. 新建GrayProcess.java 你也可以直接写在MainActivity类里，看个人习惯吧，内容如下： 123456789public class GrayProcess &#123; /** * @param buf * @param w * @param h * @return */ public static native int[] grayProcess(int[] buf, int w, int h);&#125; 6. 生成对应java类的头文件 打开命令行编辑工具后，cd到工程的src/main/java目录（注意路径），输入格式如下： javah -d ../jni 你的包名.引用本地方法的类的名称 eirot@ubuntu64:~/MyDev/study/AndroidApps/OpenCV4JNI/app/src/main/java$ javah -d ../jni com.ckt.eirot.opencv4jni.GrayProcess构建完成后就会在工程的src/main目录下生成一个jni目录，下边还包含.h头文件，如下图所示： 7. 编写C++实现类 这里可以copy下.h头文件重命名为你需要的XXX.cpp，然后去掉不需要的内容并把函数补写完成，个人感觉这样快捷点。另外，关于在Jni调用涉及OpenCV api的时候，这里我的Android studio没有提示，env-&gt; 这些其他Jni是有的。【求教！！！】 8. 编写Demo界面，运行程序 Android UI界面布局就不介绍了，随你咋弄。具体代码请移步github OpenCV4JNI 效果如下，还是美女彩色图变成灰度图： 9. 参考链接 http://johnhany.net/2016/07/opencv-3-1-ndk-dev-on-android-studio-2/#opencv-ndk-app http://blog.csdn.net/aplixy/article/details/51429305 https://www.youtube.com/watch?v=flBlhnEd530 10.Q&amp;A 参考纯java实现OpenCV Demo时，我们可以import new module将OpenCV-android-sdk\\sdk\\java\\作为依赖库导入，这样涉及到OpenCV api时AS有提示。那么在Android studio上能否实现Native层当涉及到OpenCV的函数时出现提示呢？？？比如如下Jni函数实现：123456789101112131415161718JNIEXPORT jintArray JNICALL Java_com_ckt_eirot_opencv4jni_GrayProcess_grayProcess(JNIEnv *env, class obj,jintArray buf,jint w, jint h) &#123; jboolean ptfalse = false; jint *srcBuf = env-&gt;GetIntArrayElements(buf, &amp;ptfalse); if (srcBuf == NULL) &#123; return 0; &#125; int size = w * h; Mat srcImage(h, w, CV_8UC4, (unsigned char *) srcBuf); Mat grayImage; // 加粗字符想实现像java层一样给出代码提示 cvt…. cvtColor(srcImage, grayImage, COLOR_BGRA2GRAY); cvtColor(grayImage, srcImage, COLOR_GRAY2BGRA); jintArray result = env-&gt;NewIntArray(size); env-&gt;SetIntArrayRegion(result, 0, size, srcBuf); env-&gt;ReleaseIntArrayElements(buf, srcBuf, 0); return result;&#125; 期待回复，O(∩_∩)O谢谢","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"OpenCV","slug":"OpenCV","permalink":"http://cxuef.github.io/tags/OpenCV/"},{"name":"Jni","slug":"Jni","permalink":"http://cxuef.github.io/tags/Jni/"}]},{"title":"在AS上使用纯java方式调用OpenCV","slug":"在AS上使用纯java方式调用OpenCV","date":"2016-11-16T06:59:59.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/在AS上使用纯java方式调用OpenCV/","link":"","permalink":"http://cxuef.github.io/android/在AS上使用纯java方式调用OpenCV/","excerpt":"如果你想在Android Studio上开发OpenCV应用,那么本文就是这里的一小步。下面我将分四点讲解如何在Android studio下将一张彩色的美女图利用OpenCV变成灰度图，详情请点more","text":"如果你想在Android Studio上开发OpenCV应用,那么本文就是这里的一小步。下面我将分四点讲解如何在Android studio下将一张彩色的美女图利用OpenCV变成灰度图，详情请点more 1. 导入OpenCV作为依赖Module 先自行建立好project哈，然后我们导入OpenCV作为一个依赖的Module 在弹出的窗口中找到OpenCV Android SDK下的sdk\\java文件夹，比如我的是/home/eirot/MyDev/Opencv/OpenCV-android-sdk/java 然后点击Next，保持默认选项不动，再点击Finish，完成OpenCV库的导入： 此时，Android Studio会自动更新项目配置。由于OpenCV库本身默认配置的原因，在这个过程中会产生很些错误。这就需要我们修改OpenCVLibrary300\\build.gradle文件（主要是自定义修改compileSdkVersion、minSdkVersion这些…），然后重新同步Gradle配置解决问题： 2. 为新建项目配置OpenCV 此修改项目的Module下app的build.gradle配置，添加openCVLibrary300：12345678910dependencies &#123; compile fileTree(dir: 'libs', include: ['*.jar']) androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', &#123; exclude group: 'com.android.support', module: 'support-annotations' &#125;) compile 'com.android.support:appcompat-v7:24.2.1' compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha2' testCompile 'junit:junit:4.12' compile project(':openCVLibrary300')&#125; 3. 安装OpenCV_Manager 至此，你的Android项目就支持OpenCV开发了！不过在开始前，先说点不足吧！那就是如果我们用这种方式运行程序，必须安装该死的OpenCV_Manager.apk (⊙o⊙) 该apk就在OpenCV-android-sdk/apk/ 路径下可以找到，选择【对应】设备版本的安装即可。 4. 编写测试代码 大致思路：我们需要先实现BaseLoaderCallback，然后在OnResume（）的时候将OpenCVload进去，之后再onCreate（）或者其他地方完成自己需要的业务逻辑。 这里需要注意一个问题：那就是如果你直接在onCreate（）的时候就调用了OpenCV相关的东西，比如Mat rgbMat = New Mat( )可能会报错：No implementation found for long org.opencv.core.Mat.n_Mat 这是因为OpenCVLoader采用了异步加载，此时我们还没有连接上OpenCVManner的原因！！！ 好啦，示例就是实现将一张美女图彩色图变成灰度图。具体代码请移步github FirstOpenCV，O(∩_∩)O谢谢","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"Android Studio","slug":"Android-Studio","permalink":"http://cxuef.github.io/tags/Android-Studio/"},{"name":"OpenCV","slug":"OpenCV","permalink":"http://cxuef.github.io/tags/OpenCV/"}]},{"title":"DeskClock根据时间变换背景颜色","slug":"DeskClock根据时间变换背景颜色","date":"2016-07-06T09:54:43.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/DeskClock根据时间变换背景颜色/","link":"","permalink":"http://cxuef.github.io/android/DeskClock根据时间变换背景颜色/","excerpt":"DeskClock.java是入口Activity，它继承于BaseActivity。那么真正完成根据时间换色的就是在这里了，Let’s have a look !在BaseActivity的onCreate和onResume中分别都有setBackgroundColor（），这是改变颜色的关键所在！只是需要你决定在什么时候调用这个函数哦，然后就是从数组中取出对应时间点的十六进制颜色值。","text":"DeskClock.java是入口Activity，它继承于BaseActivity。那么真正完成根据时间换色的就是在这里了，Let’s have a look !在BaseActivity的onCreate和onResume中分别都有setBackgroundColor（），这是改变颜色的关键所在！只是需要你决定在什么时候调用这个函数哦，然后就是从数组中取出对应时间点的十六进制颜色值。 好了，直接上关键部分的代码吧~123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657 /** * BaseActivity.java */@Overrideprotected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); final int currentColor = Utils.getCurrentHourColor(); final int backgroundColor = savedInstanceState == null ? currentColor : savedInstanceState.getInt(KEY_BACKGROUND_COLOR, currentColor); setBackgroundColor(backgroundColor, false /* animate */);&#125;@Overrideprotected void onResume() &#123; super.onResume(); // Register mOnTimeChangedReceiver to update current background color periodically. if (mOnTimeChangedReceiver == null) &#123; final IntentFilter filter = new IntentFilter(); filter.addAction(Intent.ACTION_TIME_TICK); filter.addAction(Intent.ACTION_TIME_CHANGED); filter.addAction(Intent.ACTION_TIMEZONE_CHANGED); registerReceiver(mOnTimeChangedReceiver = new BroadcastReceiver() &#123; @Override public void onReceive(Context context, Intent intent) &#123; setBackgroundColor(Utils.getCurrentHourColor(), true /* animate */); &#125; &#125;, filter); &#125; // Ensure the background color is up-to-date. setBackgroundColor(Utils.getCurrentHourColor(), true /* animate */);&#125; /** * Sets the current background color to the provided value and animates the change if desired. * * @param color the ARGB value to set as the current background color * @param animate &#123;@code true&#125; if the change should be animated */protected void setBackgroundColor(int color, boolean animate) &#123; if (mBackground == null) &#123; mBackground = new ColorDrawable(color); getWindow().setBackgroundDrawable(mBackground); &#125; if (mBackground.getColor() != color) &#123; if (animate) &#123; ObjectAnimator.ofObject(mBackground, \"color\", AnimatorUtils.ARGB_EVALUATOR, color) .setDuration(BACKGROUND_COLOR_ANIMATION_DURATION) .start(); &#125; else &#123; mBackground.setColor(color); &#125; &#125;&#125; 再来看看Utils.java工具类的实现^_^12345678910111213141516171819202122232425262728293031323334353637 /** * Utils.java * Returns the background color to use based on the current time. */public static int getCurrentHourColor() &#123; return BACKGROUND_SPECTRUM[Calendar.getInstance().get(Calendar.HOUR_OF_DAY)];&#125; /** * The background colors of the app - it changes throughout out the day to mimic the sky. */private static final int[] BACKGROUND_SPECTRUM = &#123; 0xFF212121 /* 12 AM */, 0xFF20222A /* 1 AM */, 0xFF202233 /* 2 AM */, 0xFF1F2242 /* 3 AM */, 0xFF1E224F /* 4 AM */, 0xFF1D225C /* 5 AM */, 0xFF1B236B /* 6 AM */, 0xFF1A237E /* 7 AM */, 0xFF1D2783 /* 8 AM */, 0xFF232E8B /* 9 AM */, 0xFF283593 /* 10 AM */, 0xFF2C3998 /* 11 AM */, 0xFF303F9F /* 12 PM */, 0xFF2C3998 /* 1 PM */, 0xFF283593 /* 2 PM */, 0xFF232E8B /* 3 PM */, 0xFF1D2783 /* 4 PM */, 0xFF1A237E /* 5 PM */, 0xFF1B236B /* 6 PM */, 0xFF1D225C /* 7 PM */, 0xFF1E224F /* 8 PM */, 0xFF1F2242 /* 9 PM */, 0xFF202233 /* 10 PM */, 0xFF20222A /* 11 PM */&#125;; 以下地址是参考DeskColock根据时间换色的Demo，参考请移步github ChangeColor","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"DeskClock","slug":"DeskClock","permalink":"http://cxuef.github.io/tags/DeskClock/"}]},{"title":"The Android Widget Of Calculator","slug":"The-Android-Widget-Of-Calculator","date":"2016-07-04T02:55:37.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/The-Android-Widget-Of-Calculator/","link":"","permalink":"http://cxuef.github.io/android/The-Android-Widget-Of-Calculator/","excerpt":"在开始之前还是先了解下什么是widget吧？！其实对于Widget我们就可以简单明了地理解为一个快捷的小插件，我们经常看见的桌面天气、时钟、音乐这些就是啦。当我们需要添加widget时，只需要长按launcher界面的空白处选择WIDGETS即可看见APP的预置widget，然后选择一个自己想要的长按拖动到launcher即可。下面我就以计算器的widget为例，大概阐述下开发widget的流程。","text":"在开始之前还是先了解下什么是widget吧？！其实对于Widget我们就可以简单明了地理解为一个快捷的小插件，我们经常看见的桌面天气、时钟、音乐这些就是啦。当我们需要添加widget时，只需要长按launcher界面的空白处选择WIDGETS即可看见APP的预置widget，然后选择一个自己想要的长按拖动到launcher即可。下面我就以计算器的widget为例，大概阐述下开发widget的流程。 1. AndroidManifest.xml中申明widgethttp://10.120.10.101/source/xref/msm8939_r3_ap_2-1/packages/apps/Calculator/AndroidManifest.xml12345678&lt;!-- Receiver for the widget --&gt;&lt;receiverandroid:name=\".widget.CalculatorWidget\"&gt; &lt;intent-filter&gt; &lt;action android:name=\"android.appwidget.action.APPWIDGET_UPDATE\" /&gt; &lt;/intent-filter&gt; &lt;meta-data android:name=\"android.appwidget.provider\" android:resource=\"@xml/calculator_widget_info\" /&gt;&lt;/receiver&gt; 2. 添加MetaData对应的AppWidgetProviderInfo描述http://10.120.10.101/source/xref/msm8939_r3_ap_2-1/packages/apps/Calculator/res/xml/calculator_widget_info.xml123456789&lt;appwidget-provider xmlns:android=\"http://schemas.android.com/apk/res/android\" android:initialKeyguardLayout=\"@layout/widget\" android:initialLayout=\"@layout/widget\" android:minHeight=\"250dp\" android:minWidth=\"250dp\" android:previewImage=\"@drawable/widget_preview\" android:resizeMode=\"vertical\" android:updatePeriodMillis=\"0\" android:widgetCategory=\"home_screen|keyguard\" /&gt; 3. 自定义widget xml布局http://10.120.10.101/source/xref/msm8939_r3_ap_2-1/packages/apps/Calculator/res/layout/widget.xml123456789101112131415161718192021222324252627282930313233343536&lt;?xmlversion=\"1.0\"encoding=\"utf-8\"?&gt;&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"&gt; &lt;LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\"&gt; &lt;LinearLayout android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:background=\"@drawable/line\" android:minHeight=\"60dp\" android:orientation=\"horizontal\"&gt; &lt;LinearLayout android:layout_width=\"0dp\" android:layout_height=\"match_parent\" android:layout_weight=\"3\"&gt; &lt;TextView android:id=\"@+id/display\" style=\"@style/Theme.Calculator.Display.Widget\" android:layout_width=\"wrap_content\" android:layout_height=\"match_parent\" android:gravity=\"right|center_vertical\" android:longClickable=\"false\" android:visibility=\"gone\" /&gt; . . . &lt;Button android:id=\"@+id/plus\" style=\"@style/Theme.Calculator.ButtonStyle.Widget\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:layout_weight=\"1\" android:text=\"@string/op_add\" /&gt; &lt;/LinearLayout&gt; &lt;/LinearLayout&gt; &lt;/LinearLayout&gt;&lt;/RelativeLayout&gt; 注意，这里的APP Widget Layout都是基于RemoteViews的，并不是支持所有的layout和widget。A RemoteViews object (and, consequently, an App Widget) can support the following layout classes: FrameLayout LinearLayout RelativeLayout GridLayout And the following widget classes: AnalogClock Button Chronometer ImageButton ImageView ProgressBar TextView ViewFlipper ListView GridView StackView AdapterViewFlipper Descendants of these classes are not supported.RemoteViews also supports ViewStub, which is an invisible, zero-sized View you can use to lazily inflate layout resources at runtime. 4. 提供AppWidgetProvider实现http://10.120.10.101/source/xref/msm8939_r3_ap_2-1/packages/apps/Calculator/src/com/android/calculator2/widget/CalculatorWidget.java12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758publicclassCalculatorWidgetextendsAppWidgetProvider &#123; @Override public void onReceive(Contextcontext, Intentintent) &#123; int appWidgetId = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, 0); Stringvalue = getValue(context, appWidgetId); if(value.equals(context.getResources().getString(R.string.error_syntax))) value = \"\"; mClearText = intent.getBooleanExtra(SHOW_CLEAR, false); final Context c = context; if(intent.getAction().equals(DIGIT_0)) &#123; if(mClearText) &#123; value = \"\"; mClearText = false; &#125; value += \"0\"; &#125; AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context); int[] appWidgetIds = appWidgetManager.getAppWidgetIds(newComponentName(context, CalculatorWidget.class)); for(intappWidgetID : appWidgetIds) &#123; updateAppWidget(context, appWidgetManager, appWidgetID); &#125; super.onReceive(context, intent); &#125; @Override public void onUpdate(Contextcontext, AppWidgetManagerappWidgetManager, int[] appWidgetIds) &#123; for(int appWidgetID : appWidgetIds) &#123; updateAppWidget(context, appWidgetManager, appWidgetID); &#125; &#125; private void updateAppWidget(Contextcontext, AppWidgetManagerappWidgetManager, intappWidgetId) &#123; RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.widget); Stringvalue = getValue(context, appWidgetId); EquationFormatterformatter = new EquationFormatter(); value = value.trim(); value = formatter.addComas(newSolver(), value); int displayId = android.os.Build.VERSION.SDK_INT &gt; android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ? R.id.display_long_clickable : R.id.display; remoteViews.setViewVisibility(displayId, View.VISIBLE); remoteViews.setTextViewText(displayId, value); remoteViews.setTextViewText(R.id.display, value); remoteViews.setViewVisibility(R.id.delete, mClearText ? View.GONE : View.VISIBLE); remoteViews.setViewVisibility(R.id.clear, mClearText ? View.VISIBLE : View.GONE); setOnClickListeners(context, appWidgetId, remoteViews); try &#123; appWidgetManager.updateAppWidget(appWidgetId, remoteViews); &#125; catch(Exception e) &#123; &#125; &#125;&#125; AppWidgetProvider主要实现以下几个方法： onUpdate() onAppWidgetOptionsChanged() onDeleted(Context, int[]) onEnabled(Context) onDisabled(Context) onReceive(Context, Intent) 这里最主要的最是实现onUpdate（）方法，用于更新和展示我们的数据！ 5. 参考文档https://developer.android.com/design/patterns/widgets.html https://developer.android.com/guide/topics/appwidgets/index.html https://developer.android.com/guide/practices/ui_guidelines/widget_design.html http://blog.csdn.net/jjwwmlp456/article/details/38466969","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/tags/android/"},{"name":"widget","slug":"widget","permalink":"http://cxuef.github.io/tags/widget/"}]},{"title":"Nexus 5X 刷入Android N Preview动手实践","slug":"Nexus-5X-刷入Android-N-Preview动手实践","date":"2016-04-27T13:16:49.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/Nexus-5X-刷入Android-N-Preview动手实践/","link":"","permalink":"http://cxuef.github.io/android/Nexus-5X-刷入Android-N-Preview动手实践/","excerpt":"还在纠结自己手机的版本还是多年前的X.x吗？嘿嘿，其实买个Google的亲儿子nexus系列的手机就好了。本文送给喜欢尝鲜的原生控geeker，不谢(￣_,￣ )需要用到的命令：1234567fastboot oem unlockfastboot flash bootloader bootloader-xxx-xxx.imgfastboot flash radio radio-xxx-xxx-xxx.imgfastboot reboot-bootloaderfastboot flash recovery recovery.imgfastboot flash boot boot.imgfastboot flash system system.img","text":"还在纠结自己手机的版本还是多年前的X.x吗？嘿嘿，其实买个Google的亲儿子nexus系列的手机就好了。本文送给喜欢尝鲜的原生控geeker，不谢(￣_,￣ )需要用到的命令：1234567fastboot oem unlockfastboot flash bootloader bootloader-xxx-xxx.imgfastboot flash radio radio-xxx-xxx-xxx.imgfastboot reboot-bootloaderfastboot flash recovery recovery.imgfastboot flash boot boot.imgfastboot flash system system.img 准备工作: 下载适合自己nexus系列的ROM http://developer.android.com/intl/zh-cn/preview/download.html 解压得到的工厂镜像 bullhead-npc56w-preview-d86c7559.tgz 打开命令行，连接电脑并确认adb可用。然后进入刚才解压镜像文件的目录 进入Settings系统设置，开启USB debugging并打开OEM锁。Settings &gt;&gt; Developer options &gt;&gt; OEM unlocking 把zip包依次解压： 解压后的文件夹结构： 好了，一切就绪。Let’s go ! 正式开工： 1. 解除厂商设备锁 fastboot oem unlock 2. 刷入 Bootloader &amp; Radio 打开命令行，进入解压工厂镜像的目录，依次输入以下命令：fastboot flash bootloader bootloader-bullhead-bhz10m.img注：由于每种设备的 bootloader 和 radio 文件名都不同，在操作时请将文件名换为对应的文件名。如果你的设备是手机或支持移动网络的平板设备，你还需要刷入radio:fastboot flash radio radio-bullhead-m8994f-2.6.31.1.09.img 3. 重启设备至 Bootloader fastboot reboot-bootloader 4. 依次刷入其他镜像文件 重启完毕后，请依次刷入 recovery、boot、system 镜像文件fastboot flash recovery recovery.imgfastboot flash boot boot.imgfastboot flash system system.imgNexus 9 用户在完成以上几步后，还需要刷入 vendor.img，命令如下：fastboot flash vendor vendor.img 5. 清除用户数据（非必选）fastboot flash cache cache.imgfastboot flash userdata userdata.img强烈建议执行此步，以避免完成后系统因为缓存或其他问题不能正常工作。 6. 再次重启 fastboot reboot 好了，开始享受你的Android N 吧：）如果你不急的话，也可以将自己的手机绑定Google账号(Settings &gt;&gt; Accounts &gt;&gt; Google)并注册Android beta等待OTA 升级(Settings &gt;&gt; About Phone &gt;&gt; System update)https://www.google.com/android/beta 命令行实际操作截图： 可能遇到的错误： fastboot no permissionseirot@ubuntu64:~$ fastboot devicesno permissions (verify udev rules); see [http://developer.android.com/tools/device.html] fastboot 解决办法：1、设置usb权限，找到设备ID，终端命令执行：lsusbeirot@ubuntu64:~$ lsusbBus 001 Device 002: ID 05c6:903a Qualcomm, Inc.Bus 001 Device 017: ID 0e8d:2003 MediaTek Inc.记住该手机对应的ID（ 05c6 就是idVendor ，903a就是 idProduct） 高通手机系列：eirot@ubuntu64:~$ lsusbBus 001 Device 002: ID 05c6:901d Qualcomm, Inc.Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hubBus 002 Device 003: ID 0e0f:0002 VMware, Inc. Virtual USB HubBus 002 Device 002: ID 0e0f:0003 VMware, Inc. Virtual MouseBus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub MTK手机系列：eirot@ubuntu64:~/MyDev/lra/mt6735$ lsusbBus 001 Device 017: ID 0e8d:2003 MediaTek Inc.Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hubBus 002 Device 003: ID 0e0f:0002 VMware, Inc. Virtual USB HubBus 002 Device 002: ID 0e0f:0003 VMware, Inc. Virtual MouseBus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub 2、新建或修改配置XXX.rules文件，终端命令执行：sudo vim /etc/udev/rules.d/99-vmware-scsi-udev.rules ，添加如下一行配置：SUBSYSTEM==”usb”, ATTRS{idVendor}==”05c6”, ATTRS{idProduct}==”903a”,MODE=”0666”MODE=”0666”：为所有用户添加读写权限：0666（’a+rw’） 3、重启相关服务：重启udev：sudo service udev restart重启adb：adb start-server oem unlock is not allowedeirot@ubuntu64:~/MyDev/apps/eirotApp/bullhead-npc56w$ fastboot flashing unlock…FAILED (remote: oem unlock is not allowed)finished. total time: 0.003s 解决办法：Settings &gt;&gt; Developer options &gt;&gt; OEM unlocking 参考附录：http://developer.android.com/intl/zh-cn/preview/download.htmlhttps://developers.google.com/android/nexus/images#instructionshttps://developer.sony.com/develop/smartphones-and-tablets/android-n-developer-preview/http://www.ithome.com/html/android/211020.htmhttp://sspai.com/27429","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"Android N Preview","slug":"Android-N-Preview","permalink":"http://cxuef.github.io/tags/Android-N-Preview/"}]},{"title":"Ubuntu14.0 Sublime Text 3 安装及配置","slug":"Ubuntu14-0-Sublime-Text-3-安装及配置","date":"2016-04-22T05:14:27.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/Ubuntu14-0-Sublime-Text-3-安装及配置/","link":"","permalink":"http://cxuef.github.io/devtools/Ubuntu14-0-Sublime-Text-3-安装及配置/","excerpt":"","text":"Sublime Textpackage control 下载Sublime Text 3 Build 3103：https://download.sublimetext.com/sublime_text_3_build_3103_x64.tar.bz2","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"Sublime Text 3","slug":"Sublime-Text-3","permalink":"http://cxuef.github.io/tags/Sublime-Text-3/"}]},{"title":"Android Studio Tip of the Day","slug":"Android-Studio-Tip-of-the-Day","date":"2016-04-12T01:50:23.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/Android-Studio-Tip-of-the-Day/","link":"","permalink":"http://cxuef.github.io/android/Android-Studio-Tip-of-the-Day/","excerpt":"http://www.developerphil.com/android-studio-tips-of-the-day-roundup-1/http://developer.android.com/intl/zh-cn/sdk/index.htmlhttp://www.jetbrains.com/idea/https://www.jetbrains.com/help/idea/2016.1/android.html?origin=old_help Android Studio Tips and Tricks Productivity Shortcuts Smart Rendering Bitmap rendering in the debugger Creating new files Output window message filtering Hierarchical parent setting Creating layouts Annotations Java class decompiling Debugging and performance enhancements Live templates","text":"http://www.developerphil.com/android-studio-tips-of-the-day-roundup-1/http://developer.android.com/intl/zh-cn/sdk/index.htmlhttp://www.jetbrains.com/idea/https://www.jetbrains.com/help/idea/2016.1/android.html?origin=old_help Android Studio Tips and Tricks Productivity Shortcuts Smart Rendering Bitmap rendering in the debugger Creating new files Output window message filtering Hierarchical parent setting Creating layouts Annotations Java class decompiling Debugging and performance enhancements Live templates Android studio shortcut of Windows or Linux shitf+Esc //收起项目结构F12 //再次回复项目结构 ctrl + 字母的组合： ctrl+y //Delete Line 删除一行ctrl+d //Duplicate Lines 复制一行ctrl+e //展示最近的文件列表ctrl+j //给出建议提示ctrl+w //逐步扩大范围ctrl+u //查看重写的父类的方法 ctrl + Fn的组合： ctrl+F8 //打开所在行打断点调试，不用点击鼠标左键ctrl+f12 //The File Structure Popup 所在类的属性、方法视图，可快速搜索 ctrl + alt等的组合： ctrl+alt+方向键左右 //返回光标之前或之后的位置alt+方向键左右 //返回最近打开文件之前或之后的位置 ctrl + shift等的组合： ctrl+shift+i //Quick Definition Lookup 快速查看定义ctrl+shift+f7 //Highlight All the Things 高亮显示标记的内容ctrl+shift+up/down //Move Whole Method Up/Down 移动整个方法 alt + shift等的组合： alt+up/down //Move Between Methods and Inner Classes 类内方法之间移动alt+shift+up/down //Move Lines Up/Down 上下交换一行alt+鼠标左键拖动 //选择多列区域","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"Android Studio","slug":"Android-Studio","permalink":"http://cxuef.github.io/tags/Android-Studio/"}]},{"title":"实用的小众工具，赶紧get吧","slug":"实用的小众工具，赶紧get吧","date":"2016-03-28T12:24:36.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/实用的小众工具，赶紧get吧/","link":"","permalink":"http://cxuef.github.io/devtools/实用的小众工具，赶紧get吧/","excerpt":"","text":"Helpful software","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/tags/devtools/"}]},{"title":"Android 自定义View之Dialog使用RelativeLayout布局无法全屏显示","slug":"Android-自定义View之Dialog使用RelativeLayout布局无法全屏显示","date":"2016-03-18T07:13:09.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/Android-自定义View之Dialog使用RelativeLayout布局无法全屏显示/","link":"","permalink":"http://cxuef.github.io/android/Android-自定义View之Dialog使用RelativeLayout布局无法全屏显示/","excerpt":"1. 问题描述现在需要弹出一个自定义的Dialog，里面有两张ImageView和两个TextView，分别用于存放生成的二维码、X关闭和WiFi Hotspot信息显示。需要呈现的UI界面如下： 2. 布局文件和QRDialog style展示先看布局文件settings_hotspot.xml","text":"1. 问题描述现在需要弹出一个自定义的Dialog，里面有两张ImageView和两个TextView，分别用于存放生成的二维码、X关闭和WiFi Hotspot信息显示。需要呈现的UI界面如下： 2. 布局文件和QRDialog style展示先看布局文件settings_hotspot.xml 1234567891011121314151617181920212223242526272829303132333435&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:background=\"@drawable/custom_settings_bg\" android:gravity=\"center_horizontal\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" &gt; &lt;ImageView android:id=\"@+id/image\" android:src=\"@drawable/custom_connection\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"10dp\" /&gt; &lt;ImageView android:id=\"@+id/qr_close\" android:src=\"@drawable/qr_close\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"4dp\" android:layout_marginLeft=\"156dp\" /&gt; &lt;TextView android:id=\"@+id/ap_ssid\" style=\"@style/QRHotspotText\" android:layout_below=\"@id/image\" /&gt; &lt;TextView android:id=\"@+id/ap_psword\" style=\"@style/QRHotspotText\" android:layout_below=\"@id/ap_ssid\" android:layout_marginBottom=\"2dp\" /&gt;&lt;/RelativeLayout&gt; 再看我们的自定义的QRDialog的样式style.xml123456789&lt;style name=\"QRDialog\" parent=\"@android:style/Theme.Dialog\"&gt; &lt;item name=\"android:windowFrame\"&gt;@null&lt;/item&gt; &lt;item name=\"android:windowFullscreen\"&gt;true&lt;/item&gt; &lt;item name=\"android:windowIsFloating\"&gt;true&lt;/item&gt; &lt;item name=\"android:windowIsTranslucent\"&gt;false&lt;/item&gt; &lt;item name=\"android:windowBackground\"&gt;@android:color/transparent&lt;/item&gt; &lt;item name=\"android:windowNoTitle\"&gt;true&lt;/item&gt; &lt;item name=\"android:backgroundDimEnabled\"&gt;true&lt;/item&gt;&lt;/style&gt; 最后用的时候指定它的样式为自己自定义的布局就好： DialogmQRDialog = new Dialog(getActivity(), R.style.QRDialog); 但奇怪，我已经定义了Dialog的大小为全屏显示ture android:windowFullscreen 但是仍没有作用呢？？？由于之前我没有加上X关闭的ImageView时使用的是父容器用的是线性布局，是可以全屏的，所以怀疑是父容器的问题（其实，一开始以为是自己设置的style属性没有生效，重启编译Settings 并且push了多次的 o(╯□╰)o ） 3. 更改布局文件，父容器使用LinearLayout修改为父容器使用LinearLayout，二维码的和X关闭的图片使用RelativeLayout相对布局 12345678910111213141516171819202122232425262728293031323334353637&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:background=\"@drawable/custom_settings_bg\" android:gravity=\"center_horizontal\" android:orientation=\"vertical\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" &gt; &lt;RelativeLayout android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"&gt; &lt;ImageView android:id=\"@+id/image\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"10dp\" /&gt; &lt;ImageView android:id=\"@+id/qr_close\" android:src=\"@drawable/qr_close\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:padding=\"5dp\" android:layout_marginTop=\"4dp\" android:layout_marginLeft=\"156dp\" /&gt; &lt;/RelativeLayout&gt; &lt;TextView android:id=\"@+id/ap_ssid\" style=\"@style/QRHotspotText\" /&gt; &lt;TextView android:id=\"@+id/ap_psword\" style=\"@style/QRHotspotText\" android:layout_marginBottom=\"2dp\" /&gt;&lt;/LinearLayout&gt; 得到最终的效果图: 4. 总结自定义Dialog时如果想全屏显示，最外层的父容器应该选择LinearLayout而不是RelativeLayout。具体原因有待进一步分析，Dialog源码~","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/tags/android/"},{"name":"自定义View","slug":"自定义View","permalink":"http://cxuef.github.io/tags/自定义View/"}]},{"title":"如何下载Google play上的最新应用","slug":"如何下载Google-play上的最新应用","date":"2016-03-08T07:26:04.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/如何下载Google-play上的最新应用/","link":"","permalink":"http://cxuef.github.io/android/如何下载Google-play上的最新应用/","excerpt":"","text":"Google play在中国大陆经常表现得不稳定，在中国的第三方市场下载应用又可能会出现病毒，或者部分国外的软件更新的不够实时，所以直接从play上下载应用就显得很重要了。然而Google play上的应用我们是不能直接下载的，只能通过登录Google账号在Google app store上安装。现在推荐一个网站通过搜索Google play apk 的id直接下载apk: apkpure: https://apkpure.com/","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"google play","slug":"google-play","permalink":"http://cxuef.github.io/tags/google-play/"},{"name":"apk","slug":"apk","permalink":"http://cxuef.github.io/tags/apk/"}]},{"title":"Matlab快捷键","slug":"Matlab快捷键","date":"2016-03-07T12:00:31.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/Matlab快捷键/","link":"","permalink":"http://cxuef.github.io/devtools/Matlab快捷键/","excerpt":"","text":"ctrl + shift +M //最大化窗口shift + F1 // 打开函数浏览器调出函数列表，便于查找ctrl + R //注释Ctrl + T //取消注释","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"matlab","slug":"matlab","permalink":"http://cxuef.github.io/tags/matlab/"}]},{"title":"FFmpeg 基本命令","slug":"FFmpeg-基本命令","date":"2016-03-01T13:14:21.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/FFmpeg-基本命令/","link":"","permalink":"http://cxuef.github.io/devtools/FFmpeg-基本命令/","excerpt":"【ffmpeg命令】无损剪辑视频利用ffmpeg可以快速的剪辑视频，保留你想要的有用信息。嘿嘿，格式如下：ffmpeg -i input.mp4 -ss [START_TIME] -t [TOTAL_TIME] -acodec copy -vcodec copy output.mp4eirot@ubuntu64 :~/MyDev/video$ ffmpeg -i Caminandes.mp4 -ss 00:00:21 -t 00:00:20 -acodec copy -vcodec copy -strict -2 haha.mp4 【ffmpeg命令】MP4转换为gif并且裁剪视频大小eirot@ubuntu64:~/MyDev/video$ ffmpeg -i haha.mp4 -pix_fmt rgb24 -vf crop=iw/1.15:ih:0:0 Mygif.gif 【ffmpeg命令】转换视频格式、分辨率及宽高比ffmpeg -i input.mp4 -vcodec mjpeg -s 320x240 -aspect 4:3 output.avi 【用图片制作视频】ffmpeg -f image2 -i ImageNamePrefix%04d.png -r [frame rate] output.mp4","text":"【ffmpeg命令】无损剪辑视频利用ffmpeg可以快速的剪辑视频，保留你想要的有用信息。嘿嘿，格式如下：ffmpeg -i input.mp4 -ss [START_TIME] -t [TOTAL_TIME] -acodec copy -vcodec copy output.mp4eirot@ubuntu64 :~/MyDev/video$ ffmpeg -i Caminandes.mp4 -ss 00:00:21 -t 00:00:20 -acodec copy -vcodec copy -strict -2 haha.mp4 【ffmpeg命令】MP4转换为gif并且裁剪视频大小eirot@ubuntu64:~/MyDev/video$ ffmpeg -i haha.mp4 -pix_fmt rgb24 -vf crop=iw/1.15:ih:0:0 Mygif.gif 【ffmpeg命令】转换视频格式、分辨率及宽高比ffmpeg -i input.mp4 -vcodec mjpeg -s 320x240 -aspect 4:3 output.avi 【用图片制作视频】ffmpeg -f image2 -i ImageNamePrefix%04d.png -r [frame rate] output.mp4 ffmpeg helper command:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116eirot@ubuntu64:~/MyDev/video$ ffmpeg -hffmpeg version 2.8.3 Copyright (c) 2000-2015 the FFmpeg developers built with gcc 4.8 (Ubuntu 4.8.4-2ubuntu1~14.04) configuration: --enable-shared --disable-static --prefix=/usr/local/ffmpeg WARNING: library configuration mismatch swscale configuration: --enable-shared swresample configuration: --enable-shared libavutil 54. 31.100 / 54. 31.100 libavcodec 56. 60.100 / 56. 60.100 libavformat 56. 40.101 / 56. 40.101 libavdevice 56. 4.100 / 56. 4.100 libavfilter 5. 40.101 / 5. 40.101 libswscale 3. 1.101 / 3. 1.101 libswresample 1. 2.101 / 1. 2.100Hyper fast Audio and Video encoderusage: ffmpeg [options] [[infile options] -i infile]... &#123;[outfile options] outfile&#125;...Getting help: -h -- print basic options -h long -- print more options -h full -- print all options (including all format and codec specific options, very long) See man ffmpeg for detailed description of the options.Print help / information / capabilities:-L show license-h topic show help-? topic show help-help topic show help--help topic show help-version show version-buildconf show build configuration-formats show available formats-devices show available devices-codecs show available codecs-decoders show available decoders-encoders show available encoders-bsfs show available bit stream filters-protocols show available protocols-filters show available filters-pix_fmts show available pixel formats-layouts show standard channel layouts-sample_fmts show available audio sample formats-colors show available color names-sources device list sources of the input device-sinks device list sinks of the output device-hwaccels show available HW acceleration methodsGlobal options (affect whole program instead of just one file:-loglevel loglevel set logging level-v loglevel set logging level-report generate a report-max_alloc bytes set maximum size of a single allocated block-y overwrite output files-n never overwrite output files-ignore_unknown Ignore unknown stream types-stats print progress report during encoding-max_error_rate ratio of errors (0.0: no errors, 1.0: 100% error maximum error rate-bits_per_raw_sample number set the number of bits per raw sample-vol volume change audio volume (256=normal)Per-file main options:-f fmt force format-c codec codec name-codec codec codec name-pre preset preset name-map_metadata outfile[,metadata]:infile[,metadata] set metadata information of outfile from infile-t duration record or transcode \"duration\" seconds of audio/video-to time_stop record or transcode stop time-fs limit_size set the limit file size in bytes-ss time_off set the start time offset-sseof time_off set the start time offset relative to EOF-seek_timestamp enable/disable seeking by timestamp with -ss-timestamp time set the recording timestamp ('now' to set the current time)-metadata string=string add metadata-target type specify target file type (\"vcd\", \"svcd\", \"dvd\", \"dv\" or \"dv50\" with optional prefixes \"pal-\", \"ntsc-\" or \"film-\")-apad audio pad-frames number set the number of frames to output-filter filter_graph set stream filtergraph-filter_script filename read stream filtergraph description from a file-reinit_filter reinit filtergraph on input parameter changes-discard discard-disposition dispositionVideo options:-vframes number set the number of video frames to output-r rate set frame rate (Hz value, fraction or abbreviation)-s size set frame size (WxH or abbreviation)-aspect aspect set aspect ratio (4:3, 16:9 or 1.3333, 1.7777)-bits_per_raw_sample number set the number of bits per raw sample-vn disable video-vcodec codec force video codec ('copy' to copy stream)-timecode hh:mm:ss[:;.]ff set initial TimeCode value.-pass n select the pass number (1 to 3)-vf filter_graph set video filters-ab bitrate audio bitrate (please use -b:a)-b bitrate video bitrate (please use -b:v)-dn disable dataAudio options:-aframes number set the number of audio frames to output-aq quality set audio quality (codec-specific)-ar rate set audio sampling rate (in Hz)-ac channels set number of audio channels-an disable audio-acodec codec force audio codec ('copy' to copy stream)-vol volume change audio volume (256=normal)-af filter_graph set audio filtersSubtitle options:-s size set frame size (WxH or abbreviation)-sn disable subtitle-scodec codec force subtitle codec ('copy' to copy stream)-stag fourcc/tag force subtitle tag/fourcc-fix_sub_duration fix subtitles duration-canvas_size size set canvas size (WxH or abbreviation)-spre preset set the subtitle options to the indicated preset 查看ffmpeg支持的格式eirot@ubuntu64:~$ ffmpeg -formatsffmpeg version 2.8.3 Copyright (c) 2000-2015 the FFmpeg developers built with gcc 4.8 (Ubuntu 4.8.4-2ubuntu1~14.04) configuration: --enable-shared --disable-static --prefix=/usr/local/ffmpeg WARNING: library configuration mismatch swscale configuration: --enable-shared swresample configuration: --enable-shared libavutil 54. 31.100 / 54. 31.100 libavcodec 56. 60.100 / 56. 60.100 libavformat 56. 40.101 / 56. 40.101 libavdevice 56. 4.100 / 56. 4.100 libavfilter 5. 40.101 / 5. 40.101 libswscale 3. 1.101 / 3. 1.101 libswresample 1. 2.101 / 1. 2.100File formats: D. = Demuxing supported .E = Muxing supported -- E 3g2 3GP2 (3GPP2 file format) E 3gp 3GP (3GPP file format) D 4xm 4X Technologies E a64 a64 - video for Commodore 64 D aa Audible AA format files D aac raw ADTS AAC (Advanced Audio Coding) DE ac3 raw AC-3 D act ACT Voice file format D adf Artworx Data Format D adp ADP E adts ADTS AAC (Advanced Audio Coding) DE adx CRI ADX D aea MD STUDIO audio D afc AFC DE aiff Audio IFF DE alaw PCM A-law D alias_pix Alias/Wavefront PIX image DE amr 3GPP AMR D anm Deluxe Paint Animation D apc CRYO APC D ape Monkey's Audio DE apng Animated Portable Network Graphics D aqtitle AQTitle subtitles DE asf ASF (Advanced / Active Streaming Format) D asf_o ASF (Advanced / Active Streaming Format) E asf_stream ASF (Advanced / Active Streaming Format) DE ass SSA (SubStation Alpha) subtitle DE ast AST (Audio Stream) DE au Sun AU DE avi AVI (Audio Video Interleaved) E avm2 SWF (ShockWave Flash) (AVM2) D avr AVR (Audio Visual Research) D avs AVS D bethsoftvid Bethesda Softworks VID D bfi Brute Force &amp; Ignorance D bfstm BFSTM (Binary Cafe Stream) D bin Binary text D bink Bink DE bit G.729 BIT file format D bmp_pipe piped bmp sequence D bmv Discworld II BMV D boa Black Ops Audio D brender_pix BRender PIX image D brstm BRSTM (Binary Revolution Stream) D c93 Interplay C93 DE caf Apple CAF (Core Audio Format) DE cavsvideo raw Chinese AVS (Audio Video Standard) video D cdg CD Graphics D cdxl Commodore CDXL video D cine Phantom Cine D concat Virtual concatenation script E crc CRC testing E dash DASH Muxer DE data raw data DE daud D-Cinema audio D dds_pipe piped dds sequence D dfa Chronomaster DFA DE dirac raw Dirac DE dnxhd raw DNxHD (SMPTE VC-3) D dpx_pipe piped dpx sequence D dsf DSD Stream File (DSF) D dsicin Delphine Software International CIN D dss Digital Speech Standard (DSS) DE dts raw DTS D dtshd raw DTS-HD DE dv DV (Digital Video) D dv1394 DV1394 A/V grab D dvbsub raw dvbsub E dvd MPEG-2 PS (DVD VOB) D dxa DXA D ea Electronic Arts Multimedia D ea_cdata Electronic Arts cdata DE eac3 raw E-AC-3 D epaf Ensoniq Paris Audio File D exr_pipe piped exr sequence DE f32be PCM 32-bit floating-point big-endian DE f32le PCM 32-bit floating-point little-endian E f4v F4V Adobe Flash Video DE f64be PCM 64-bit floating-point big-endian DE f64le PCM 64-bit floating-point little-endian DE fbdev Linux framebuffer DE ffm FFM (FFserver live feed) DE ffmetadata FFmpeg metadata in text D film_cpk Sega FILM / CPK DE filmstrip Adobe Filmstrip DE flac raw FLAC D flic FLI/FLC/FLX animation DE flv FLV (Flash Video) E framecrc framecrc testing E framemd5 Per-frame MD5 testing D frm Megalux Frame DE g722 raw G.722 DE g723_1 raw G.723.1 D g729 G.729 raw format demuxer DE gif GIF Animation D gsm raw GSM DE gxf GXF (General eXchange Format) DE h261 raw H.261 DE h263 raw H.263 DE h264 raw H.264 video E hds HDS Muxer DE hevc raw HEVC video E hls Apple HTTP Live Streaming D hls,applehttp Apple HTTP Live Streaming D hnm Cryo HNM v4 DE ico Microsoft Windows ICO D idcin id Cinematic D idf iCE Draw File D iff IFF (Interchange File Format) DE ilbc iLBC storage DE image2 image2 sequence DE image2pipe piped image2 sequence D ingenient raw Ingenient MJPEG D ipmovie Interplay MVE E ipod iPod H.264 MP4 (MPEG-4 Part 14) DE ircam Berkeley/IRCAM/CARL Sound Format E ismv ISMV/ISMA (Smooth Streaming) D iss Funcom ISS D iv8 IndigoVision 8000 video DE ivf On2 IVF D j2k_pipe piped j2k sequence DE jacosub JACOsub subtitle format D jpeg_pipe piped jpeg sequence D jpegls_pipe piped jpegls sequence D jv Bitmap Brothers JV DE latm LOAS/LATM D lavfi Libavfilter virtual input device D live_flv live RTMP FLV (Flash Video) D lmlm4 raw lmlm4 D loas LOAS AudioSyncStream DE lrc LRC lyrics D lvf LVF D lxf VR native stream (LXF) DE m4v raw MPEG-4 video E matroska Matroska D matroska,webm Matroska / WebM E md5 MD5 testing D mgsts Metal Gear Solid: The Twin Snakes DE microdvd MicroDVD subtitle format DE mjpeg raw MJPEG video E mkvtimestamp_v2 extract pts as timecode v2 format, as defined by mkvtoolnix DE mlp raw MLP D mlv Magic Lantern Video (MLV) D mm American Laser Games MM DE mmf Yamaha SMAF E mov QuickTime / MOV D mov,mp4,m4a,3gp,3g2,mj2 QuickTime / MOV E mp2 MP2 (MPEG audio layer 2) DE mp3 MP3 (MPEG audio layer 3) E mp4 MP4 (MPEG-4 Part 14) D mpc Musepack D mpc8 Musepack SV8 DE mpeg MPEG-1 Systems / MPEG program stream E mpeg1video raw MPEG-1 video E mpeg2video raw MPEG-2 video DE mpegts MPEG-TS (MPEG-2 Transport Stream) D mpegtsraw raw MPEG-TS (MPEG-2 Transport Stream) D mpegvideo raw MPEG video DE mpjpeg MIME multipart JPEG D mpl2 MPL2 subtitles D mpsub MPlayer subtitles D msnwctcp MSN TCP Webcam stream D mtv MTV DE mulaw PCM mu-law D mv Silicon Graphics Movie D mvi Motion Pixels MVI DE mxf MXF (Material eXchange Format) E mxf_d10 MXF (Material eXchange Format) D-10 Mapping E mxf_opatom MXF (Material eXchange Format) Operational Pattern Atom D mxg MxPEG clip D nc NC camera feed D nistsphere NIST SPeech HEader REsources D nsv Nullsoft Streaming Video E null raw null video DE nut NUT D nuv NuppelVideo E oga Ogg Audio DE ogg Ogg DE oma Sony OpenMG audio E opus Ogg Opus DE oss OSS (Open Sound System) playback D paf Amazing Studio Packed Animation File D pictor_pipe piped pictor sequence D pjs PJS (Phoenix Japanimation Society) subtitles D pmp Playstation Portable PMP D png_pipe piped png sequence E psp PSP MP4 (MPEG-4 Part 14) D psxstr Sony Playstation STR D pva TechnoTrend PVA D pvf PVF (Portable Voice Format) D qcp QCP D qdraw_pipe piped qdraw sequence D r3d REDCODE R3D DE rawvideo raw video D realtext RealText subtitle format D redspark RedSpark D rl2 RL2 DE rm RealMedia DE roq raw id RoQ D rpl RPL / ARMovie D rsd GameCube RSD DE rso Lego Mindstorms RSO DE rtp RTP output E rtp_mpegts RTP/mpegts output format DE rtsp RTSP output DE s16be PCM signed 16-bit big-endian DE s16le PCM signed 16-bit little-endian DE s24be PCM signed 24-bit big-endian DE s24le PCM signed 24-bit little-endian DE s32be PCM signed 32-bit big-endian DE s32le PCM signed 32-bit little-endian DE s8 PCM signed 8-bit D sami SAMI subtitle format DE sap SAP output D sbg SBaGen binaural beats script D sdp SDP D sdr2 SDR2 E segment segment D sgi_pipe piped sgi sequence D shn raw Shorten D siff Beam Software SIFF E singlejpeg JPEG single image D sln Asterisk raw pcm DE smjpeg Loki SDL MJPEG D smk Smacker E smoothstreaming Smooth Streaming Muxer D smush LucasArts Smush D sol Sierra SOL DE sox SoX native DE spdif IEC 61937 (used on S/PDIF - IEC958) E spx Ogg Speex DE srt SubRip subtitle D stl Spruce subtitle format E stream_segment,ssegment streaming segment muxer D subviewer SubViewer subtitle format D subviewer1 SubViewer v1 subtitle format D sunrast_pipe piped sunrast sequence D sup raw HDMV Presentation Graphic Stream subtitles E svcd MPEG-2 PS (SVCD) DE swf SWF (ShockWave Flash) D tak raw TAK D tedcaptions TED Talks captions E tee Multiple muxer tee D thp THP D tiertexseq Tiertex Limited SEQ D tiff_pipe piped tiff sequence D tmv 8088flex TMV DE truehd raw TrueHD D tta TTA (True Audio) D tty Tele-typewriter D txd Renderware TeXture Dictionary DE u16be PCM unsigned 16-bit big-endian DE u16le PCM unsigned 16-bit little-endian DE u24be PCM unsigned 24-bit big-endian DE u24le PCM unsigned 24-bit little-endian DE u32be PCM unsigned 32-bit big-endian DE u32le PCM unsigned 32-bit little-endian DE u8 PCM unsigned 8-bit E uncodedframecrc uncoded framecrc testing E v4l2 Video4Linux2 output device DE vc1 raw VC-1 video DE vc1test VC-1 test bitstream E vcd MPEG-1 Systems / MPEG program stream (VCD) D video4linux2,v4l2 Video4Linux2 device grab D vivo Vivo D vmd Sierra VMD E vob MPEG-2 PS (VOB) D vobsub VobSub subtitle format DE voc Creative Voice D vplayer VPlayer subtitles D vqf Nippon Telegraph and Telephone Corporation (NTT) TwinVQ DE w64 Sony Wave64 DE wav WAV / WAVE (Waveform Audio) D wc3movie Wing Commander III movie E webm WebM E webm_chunk WebM Chunk Muxer DE webm_dash_manifest WebM DASH Manifest E webp WebP D webp_pipe piped webp sequence DE webvtt WebVTT subtitle D wsaud Westwood Studios audio D wsvqa Westwood Studios VQA DE wtv Windows Television (WTV) DE wv raw WavPack D x11grab X11 screen capture, using XCB D xa Maxis XA D xbin eXtended BINary text (XBIN) D xmv Microsoft XMV D xwma Microsoft xWMA D yop Psygnosis YOP DE yuv4mpegpipe YUV4MPEG pipe","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"ffmpeg","slug":"ffmpeg","permalink":"http://cxuef.github.io/tags/ffmpeg/"}]},{"title":"Hexo博客自己给自己挖的坑之.gitignore","slug":"Hexo博客自己给自己挖的坑之-gitignore","date":"2016-02-29T06:58:11.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/Hexo博客自己给自己挖的坑之-gitignore/","link":"","permalink":"http://cxuef.github.io/devtools/Hexo博客自己给自己挖的坑之-gitignore/","excerpt":"之前blog一直可以通过点击tags进入某一标签的文章，类似于话题归类吧。但是前几天突然发现不行了，链接点击一直404。于是网上各种百度啊，好吧~众说纷纭！一开始怀疑是hexo没有重新生成或者生成不成功，删除public文件夹和db.json后hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 了很多次，每次都提示成功了的(⊙﹏⊙) 自己也查看了下，\\public\\tags\\也生成了index.html，因此不存在生成问题。既然生成没有问题，又开始怀疑是不是主题缓存问题呢？又哐当哐当地更新了nodejs12sudo npm cache clean --forcesudo npm update","text":"之前blog一直可以通过点击tags进入某一标签的文章，类似于话题归类吧。但是前几天突然发现不行了，链接点击一直404。于是网上各种百度啊，好吧~众说纷纭！一开始怀疑是hexo没有重新生成或者生成不成功，删除public文件夹和db.json后hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 了很多次，每次都提示成功了的(⊙﹏⊙) 自己也查看了下，\\public\\tags\\也生成了index.html，因此不存在生成问题。既然生成没有问题，又开始怀疑是不是主题缓存问题呢？又哐当哐当地更新了nodejs12sudo npm cache clean --forcesudo npm update 几个回合的折腾后，最后跑到github部署的主页上看看自己的提交，一看吓一跳，新的tags没有提交成功！OMG，问题就在这啦。知道问题所在就好办了，先检查自己的配置是否正确，发现是OK的！好吧，git用多了你就会敏锐地怀疑是不是哪里设置了忽略的配置.gitignore。果不其然，在我的home目录下自己设置了全局的.gitignore，如下： 12345678910111213141516# ignore the ctag filetags# ignore the eclipse generate file.project.classpathproject.propertiespackages/apps/*/bin/packages/apps/*/gen/# ignore the android compile dirout/prebuilts/prebuilts/python/linux-x86/2.7.5/lib/python2.7/kernel-3.18/*packages/apps/Settings/.settings/ 这下终于找到罪魁祸首了，自己以前设置的忽略ctag生成的tags导致tags文件或tags/文件夹下的东西都被忽略了！啊，多么痛的领悟，赶紧加上 !tags/ 改回来：12345678910111213141516171819# ignore the ctag filetags# Don't ignore the tags dir of my blog!tags/# ignore the eclipse generate file.project.classpathproject.propertiespackages/apps/*/bin/packages/apps/*/gen/# ignore the android compile dirout/prebuilts/prebuilts/python/linux-x86/2.7.5/lib/python2.7/kernel-3.18/*packages/apps/Settings/.settings/ 好啦，重新hexo d部署，一切OK！","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://cxuef.github.io/tags/Hexo/"}]},{"title":"adb push XXX.apk成功后，Launcher界面没有图标显示","slug":"adb-push-XXX-apk成功后，Launcher界面没有图标显示","date":"2016-02-27T09:16:37.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/adb-push-XXX-apk成功后，Launcher界面没有图标显示/","link":"","permalink":"http://cxuef.github.io/android/adb-push-XXX-apk成功后，Launcher界面没有图标显示/","excerpt":"原因分析： 可能是AndroidManifest.xml定义程序主入口的activity的intent-filte没有申明android.intent.category.LAUNCHER 可能是系统没有及时解析 看看Launcher是否有针对该应用包名的隐藏设置（系统级隐藏特定包名，一般不会） 看看编译的版本是eng还是user-debug？eng版本可能会有这个问题哦 接下来还是一步一步排查吧~","text":"原因分析： 可能是AndroidManifest.xml定义程序主入口的activity的intent-filte没有申明android.intent.category.LAUNCHER 可能是系统没有及时解析 看看Launcher是否有针对该应用包名的隐藏设置（系统级隐藏特定包名，一般不会） 看看编译的版本是eng还是user-debug？eng版本可能会有这个问题哦 接下来还是一步一步排查吧~ 解决方法： 查看该应用的 AndroidManifest.xml定义程序主入口的activity中是否有android.intent.category.LAUNCHER 123456789101112131415161718192021222324252627&lt;activity android:name=\"Settings\" android:taskAffinity=\"com.android.settings\" android:label=\"@string/settings_label_launcher\" android:launchMode=\"singleTask\"&gt; &lt;intent-filter android:priority=\"1\"&gt; &lt;action android:name=\"android.intent.action.MAIN\" /&gt; &lt;action android:name=\"android.settings.SETTINGS\" /&gt; &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt; &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt; &lt;category android:name=\"android.intent.category.APP_SETTINGS\" /&gt; &lt;/intent-filter&gt; &lt;meta-data android:name=\"com.android.settings.PRIMARY_PROFILE_CONTROLLED\" android:value=\"true\" /&gt;&lt;/activity&gt;&lt;!-- Alias for launcher activity only, as this belongs to each profile. --&gt; &lt;activity-alias android:name=\"Settings\" android:taskAffinity=\"com.android.settings\" android:label=\"@string/settings_label_launcher\" android:launchMode=\"singleTask\" android:targetActivity=\"Settings\"&gt; &lt;intent-filter&gt; &lt;action android:name=\"android.intent.action.MAIN\" /&gt; &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt; &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt; &lt;/intent-filter&gt;&lt;/activity-alias&gt; adb shell stop &amp;&amp; adb shell start 重启Framework（或者干脆adb reboot重启设备）","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"adb","slug":"adb","permalink":"http://cxuef.github.io/tags/adb/"}]},{"title":"如何科学免费地上网？一起翻墙吧","slug":"如何科学免费地上网？一起翻墙吧","date":"2016-02-26T08:18:55.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/如何科学免费地上网？一起翻墙吧/","link":"","permalink":"http://cxuef.github.io/devtools/如何科学免费地上网？一起翻墙吧/","excerpt":"首先来说下本教程给你带来的福利吧： 畅想自由的互网联世界，免费 能看YouTube视频，不限流量 好像其他没什么特色了O(∩_∩)O哈哈~","text":"首先来说下本教程给你带来的福利吧： 畅想自由的互网联世界，免费 能看YouTube视频，不限流量 好像其他没什么特色了O(∩_∩)O哈哈~ 1. 安装 SwitchyOmega.crx 切换代理插件到Chrome浏览器有两种安装方式：1.1 Chrome Web Store 直接搜索安装插件： https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif1.2 SwitchyOmega github下载好插件再拖进Chrome： https://github.com/FelisCatus/SwitchyOmega/releases附上SwitchyOmega github源码： https://github.com/FelisCatus/SwitchyOmega 2. 启用插件，打开 Google Chrome 浏览器的扩展程序界面（右上角点击== –&gt; 更多工具（L）–&gt; 扩展程序（E））Ps:来个快捷方式O(∩_∩)O~地址栏中输入: chrome://extensions启用过后，右上角可以看见SwitchyOmega了! 3. 安装shadowsocks客户端： https://www.youss.org/download.php 百度云传送门：链接: http://pan.baidu.com/s/1dDVRIDz 密码: vkyz附上我fork的Shadowsocks github源码（原作者前不久被请去喝茶了，所以后来根据国家相关法律法规就删除了） 4. 点击解压后的Shadowsocks.exe(其实这只是一个快捷方式而已，并不用安装哦) 5. 打开之后当然是填写的VPS地址啦？！什么鬼，我好像没有耶！(⊙o⊙)…额，那我给你推荐些免费的吧（请低调使用）https://www.namaho.com/prpr.html 6. 随便选择一个代理服务器吧，照着填入Shadowsocks客户端就行~这feeling……当然选择哪个VPS可用或者更好呢？Windows cmd窗口ping一下就好了（可请略过) 这就是填写的VPS配置啦，如图： 7. 配置好过后当然是开启服务啦找到右下角Windows通知栏里的Shadowsocks，单击鼠标右键进行开启： 8. 最后一步，在浏览器使用系统代理： 9. 试一下你现在是在墙内还是墙外吧~https://www.google.com/ 写完啦，需要的赶紧看或者保存下来，本篇文章我可能随时删除( ⊙ o ⊙ )！如果你照着做没成功，多看几遍哦。实在有问题，可以Tell me","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"http://cxuef.github.io/tags/Shadowsocks/"}]},{"title":"OpenCV3.0将彩色视频转换为灰度视频","slug":"OpenCV3-0将彩色视频转换为灰度视频","date":"2016-02-25T02:01:13.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"linux/OpenCV3-0将彩色视频转换为灰度视频/","link":"","permalink":"http://cxuef.github.io/linux/OpenCV3-0将彩色视频转换为灰度视频/","excerpt":"开始工作之前，我们先理一下思路:如果是将一张彩色图片转化为灰度图，我们可以直接调用Opencv自带函数cvtColor()。同理，视频无外乎就是一系列的帧，我们可以循环读入帧并转化成灰度图然后写入磁盘即可。本示例是在Ubuntu14.0+Cmake+Opencv3.0的环境下编译运行的，算是比较新的版本了。我们分为4个步骤: 编写CMakeLists.txt定义编译的Project 码主程序GrayVideo.cpp cmake编译 运行程序","text":"开始工作之前，我们先理一下思路:如果是将一张彩色图片转化为灰度图，我们可以直接调用Opencv自带函数cvtColor()。同理，视频无外乎就是一系列的帧，我们可以循环读入帧并转化成灰度图然后写入磁盘即可。本示例是在Ubuntu14.0+Cmake+Opencv3.0的环境下编译运行的，算是比较新的版本了。我们分为4个步骤: 编写CMakeLists.txt定义编译的Project 码主程序GrayVideo.cpp cmake编译 运行程序 Now show the code: 编写CMakeLists.txt定义编译的Project eirot@ubuntu64:~/MyDev/Opencv/Demo/GrayVideo$ vim CMakeLists.txt 12345cmake_minimum_required(VERSION 2.8)project( Grayvideo )find_package( OpenCV REQUIRED )add_executable( GrayVideo GrayVideo.cpp )target_link_libraries( GrayVideo $&#123;OpenCV_LIBS&#125; ) 码主程序GrayVideo.cpp eirot@ubuntu64:~/MyDev/Opencv/Demo/GrayVideo$ vim GrayVideo.cpp 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273#include &lt;opencv2/opencv.hpp&gt;#include &lt;string&gt;#include &lt;iostream&gt;#include &lt;fstream&gt;#include &lt;sstream&gt;#include &lt;stdexcept&gt;#include \"opencv2/core/core.hpp\"#include &lt;opencv2/core/utility.hpp&gt;#include &lt;opencv2/opencv.hpp&gt;#include \"opencv2/video/video.hpp\"#include \"opencv2/imgproc/imgproc.hpp\"#include \"opencv2/videoio/videoio.hpp\"#include \"opencv2/highgui/highgui.hpp\"#include \"opencv2/opencv_modules.hpp\"using namespace std;using namespace cv;#define FILENAME \"GrayVideo.avi\"double outputFps = 30;string outputPath = \"GrayVideo.avi\";int main()&#123; VideoCapture capture(\"DXJX2011.mov\"); VideoWriter writer; Mat gray_frame; Mat orignal_frame; //Mat edge_frame; int nframes = 0; fstream _file; _file.open(FILENAME,ios::in); if(_file) &#123; cout &lt;&lt; \"Video have been converted to gray ! Exit now\" &lt;&lt; endl; exit(0); &#125; while (1) &#123; nframes++; // init writer (once) and save grayed frame capture &gt;&gt; orignal_frame; cvtColor(orignal_frame, gray_frame, COLOR_BGR2GRAY); /* Do some addtional work if you want blur(gray_frame, edge_frame, Size(7,7)); Canny(gray_frame, edge_frame, 0,30 ,3); */ if (!outputPath.empty()) &#123; if (!writer.isOpened()) &#123; //is_color=1 默认为彩色视频,转化为灰度视频必须设为单通道 writer.open(outputPath, VideoWriter::fourcc('X','V','I','D'), outputFps, orignal_frame.size(), 0); &#125; writer &lt;&lt; gray_frame; cout &lt;&lt; \"---&gt;&gt;Write frame: \" &lt;&lt; nframes &lt;&lt; endl; &#125; if (orignal_frame.empty()) &#123; cout &lt;&lt; \"It's done ! \" &lt;&lt; endl; break; &#125; if (waitKey(30) &gt;= 0) break; imshow(\"GrayVideo\", gray_frame); &#125; cout &lt;&lt; \"processed frames: \" &lt;&lt; nframes &lt;&lt; endl&lt;&lt; \"finished\\n\";&#125; cmake编译 eirot@ubuntu64:~/MyDev/Opencv/Demo/GrayVideo$ cmake . eirot@ubuntu64:~/MyDev/Opencv/Demo/GrayVideo$ make 运行程序 eirot@ubuntu64:~/MyDev/Opencv/Demo/GrayVideo$ ./GrayVideo —&gt;&gt;Write frame: 361It’s done !processed frames: 361finished","categories":[{"name":"linux","slug":"linux","permalink":"http://cxuef.github.io/categories/linux/"}],"tags":[{"name":"OpenCV","slug":"OpenCV","permalink":"http://cxuef.github.io/tags/OpenCV/"}]},{"title":"Add outchain of music.163.com to hexo article","slug":"Add-outchain-of-music-163-com-to-hexo-article","date":"2016-02-24T01:28:48.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"心晴/Add-outchain-of-music-163-com-to-hexo-article/","link":"","permalink":"http://cxuef.github.io/心晴/Add-outchain-of-music-163-com-to-hexo-article/","excerpt":"Wow, such a beautiful html5 music player, I love it!!! Thanks for Open Source, thank you DIYgod and Grzhanhttps://github.com/DIYgod/APlayerhttps://github.com/grzhan/hexo-tag-aplayerhttps://www.anotherhome.net/file/APlayer/","text":"Wow, such a beautiful html5 music player, I love it!!! Thanks for Open Source, thank you DIYgod and Grzhanhttps://github.com/DIYgod/APlayerhttps://github.com/grzhan/hexo-tag-aplayerhttps://www.anotherhome.net/file/APlayer/ Installationnpm install hexo-tag-aplayer Usage1&#123;% aplayer title author url [picture_url, narrow, autoplay] %&#125; Wrap the arguments within a string literal, for example:1&#123;% aplayer \"Caffeine\" \"Jeff Williams\" \"caffeine.mp3\" \"autoplay\" %&#125; Show it now : var ap = new APlayer({ element: document.getElementById(\"aplayer-LSpOhVUj\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"Caffeine\", author: \"Eirot\", url: \"http://7xq131.com1.z0.glb.clouddn.com/あっちゅ～ま青春!.mp3\", pic: \"/MusicAlbum/default.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); Add the local music: var ap = new APlayer({ element: document.getElementById(\"aplayer-qHxdRtAQ\"), narrow: true, autoplay: false, showlrc: false, music: { title: \"MustClaver\", author: \"GatterJaani\", url: \"/music/MustKlaver.mp3\", pic: \"/MusicAlbum/gatter_jaani.png\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); This is a music outchain of music.163.com","categories":[{"name":"心晴","slug":"心晴","permalink":"http://cxuef.github.io/categories/心晴/"}],"tags":[{"name":"music","slug":"music","permalink":"http://cxuef.github.io/tags/music/"}]},{"title":"如何加速Android源码的编译","slug":"如何加速Android源码的编译","date":"2016-02-22T05:21:09.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/如何加速Android源码的编译/","link":"","permalink":"http://cxuef.github.io/android/如何加速Android源码的编译/","excerpt":"Cache一词来源于法语，其原意是“藏匿处，隐秘的地方”，而自从被应用于计算机科学之后，就已经成为了英语中的一个计算机体系结构专有名词。Sun Microsystems的前首席科学家Billy Joy，作为BSD unix，csh，vi，NFS，java，TCP/IP等的发明者，他曾经说过，在计算机科学领域，如果没有了cache的发明，其他的一切发明都将失去意义。而正是他，将给予分页的虚拟内存系统引入了Unix，影响了之后所有的新操作系统开发。Cache的出现是为了解决CPU日益增长的核心时钟频率以及系统主内存日益落后的素质之间的矛盾。Cache的基本原理是局部性原理，局部性原理简单说起来就是在前一段时间经常用到的代码，在将来会被再次使用的几率也很高。","text":"Cache一词来源于法语，其原意是“藏匿处，隐秘的地方”，而自从被应用于计算机科学之后，就已经成为了英语中的一个计算机体系结构专有名词。Sun Microsystems的前首席科学家Billy Joy，作为BSD unix，csh，vi，NFS，java，TCP/IP等的发明者，他曾经说过，在计算机科学领域，如果没有了cache的发明，其他的一切发明都将失去意义。而正是他，将给予分页的虚拟内存系统引入了Unix，影响了之后所有的新操作系统开发。Cache的出现是为了解决CPU日益增长的核心时钟频率以及系统主内存日益落后的素质之间的矛盾。Cache的基本原理是局部性原理，局部性原理简单说起来就是在前一段时间经常用到的代码，在将来会被再次使用的几率也很高。 1. vim ~/.bashrc 添加相关配置 123#add ccache for speeding up android source code compilationexport USE_CCACHE=1export CCACHE_DIR=/home/eirot/ccache 2. 进入到所在项目的android目录下设置ccache的大小eirot@ubuntu64:~/MyDev/rimocode/msm8994_S/LINUX/android$ ./prebuilts/misc/linux-x86/ccache/ccache -M 30G 3. 按照原有的方式正常编译 123source build/envsetup.shlunchmake -j8 4. 查看ccache使用率 On Linux, you can watch ccache being used by doing the following:eirot@ubuntu64:~/MyDev/rimocode/msm8994_S/LINUX/android$ watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s 5. 清除ccache缓存 eirot@ubuntu64:~/MyDev/rimocode/msm8994_S/LINUX/android$ ./prebuilts/misc/linux-x86/ccache/ccache -c","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"ccache","slug":"ccache","permalink":"http://cxuef.github.io/tags/ccache/"}]},{"title":"Linux永久挂载(mount)分区","slug":"Linux永久挂载-mount-分区","date":"2016-02-22T02:37:36.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"linux/Linux永久挂载-mount-分区/","link":"","permalink":"http://cxuef.github.io/linux/Linux永久挂载-mount-分区/","excerpt":"","text":"1.eirot@ubuntu64:~$ sudo blkid /dev/sdb1 得到/dev/sdb1这个分区的UUID:1/dev/sdb1: UUID=\"f85f79e6-19d0-4f4f-a15d-6204eed0b21d\" TYPE=\"ext4\" 2.eirot@ubuntu64:~$ vim /etc/fstab 添加挂载项:1UUID=f85f79e6-19d0-4f4f-a15d-6204eed0b21d /home/eirot/MyDev ext4 defaults 0 2","categories":[{"name":"linux","slug":"linux","permalink":"http://cxuef.github.io/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://cxuef.github.io/tags/linux/"},{"name":"mount","slug":"mount","permalink":"http://cxuef.github.io/tags/mount/"}]},{"title":"快用Hexo动手搭建自己的Blog吧","slug":"快用Hexo动手搭建自己的Blog吧","date":"2016-02-19T05:55:18.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/快用Hexo动手搭建自己的Blog吧/","link":"","permalink":"http://cxuef.github.io/devtools/快用Hexo动手搭建自己的Blog吧/","excerpt":"Hexo是一款基于Node.js的静态博客，它是由台湾的一位大学生写出来的，支持很多主题和Markdown，很炫酷并且也很好用，现在已经可以支持多说了，很多人都在使用。如果你想Geek一下，可以尝试一下自己搭建一款属于自己的Hexo博客。其中自己特别喜欢yilia主题的简约大气，赞~ 另外本篇博文介绍的是Ubuntu14.0+hexo3.1+github+markdown的写作方式，比较适合Linuxer玩家哟","text":"Hexo是一款基于Node.js的静态博客，它是由台湾的一位大学生写出来的，支持很多主题和Markdown，很炫酷并且也很好用，现在已经可以支持多说了，很多人都在使用。如果你想Geek一下，可以尝试一下自己搭建一款属于自己的Hexo博客。其中自己特别喜欢yilia主题的简约大气，赞~ 另外本篇博文介绍的是Ubuntu14.0+hexo3.1+github+markdown的写作方式，比较适合Linuxer玩家哟 https://github.com/hexojs/hexo https://hexo.io/ https://hexo.io/docs/ https://hexo.io/plugins/ 接下来就是正式地安装啦 O(∩_∩)O~ 1. eirot@ubuntu64:~/MyDev/eirotBlog$ sudo apt-get install npm 2. eirot@ubuntu64:~/MyDev/eirotBlog$ npm install hexo-cli -g (多执行几次！) 3. eirot@ubuntu64:~/MyDev/eirotBlog$ hexo init blog 解决方法：http://stackoverflow.com/questions/26320901/cannot-install-nodejs-usr-bin-env-node-no-such-file-or-directory建立软连接：eirot@ubuntu64:~/MyDev/eirotBlog$ sudo ln -s /usr/bin/nodejs /usr/bin/node 3.1再执行eirot@ubuntu64:~/MyDev/eirotBlog$ hexo init blog 3.2现在我们的工作继续，得到如下结果： 4. 进入刚刚创建的blog目录：eirot@ubuntu64:~/MyDev/eirotBlog/blog$ sudo npm install 5. eirot@ubuntu64:~/MyDev/eirotBlog/blog$ hexo server 6. eirot@ubuntu64:~/MyDev/eirotBlog/blog$ hexo new “Hello Eirot hexo !” 7. eirot@ubuntu64:~/MyDev/eirotBlog/blog$ hexo generate 8. 下载并配置自己喜欢的主题：eirot@ubuntu64:~/MyDev/eirotBlog/blog$ git clone https://github.com/litten/hexo-theme-yilia.git yilia主题结构：.├── languages├── layout│ └── _partial│ └── post└── source ├── css │ ├── fonts │ ├── _partial │ └── _util ├── fancybox │ └── helpers ├── img └── js附上该大虾Blog~ http://litten.github.io/2014/08/31/hexo-theme-yilia/ 9. github托管（注意千万不要少了空格！） 安装默认插件完成后，为了支持github，还需要安装另一个插件：npm install hexo-deployer-git –save 10. eirot@ubuntu64:~/MyDev/eirotBlog/blog$ hexo d 11. Hexo 常用命令 12345678hexo new \"postName\" #新建文章hexo new page \"pageName\" #新建页面hexo clean #清除生成的东西hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://cxuef.github.io/tags/Hexo/"},{"name":"个人小站","slug":"个人小站","permalink":"http://cxuef.github.io/tags/个人小站/"}]},{"title":"好玩的音乐社区","slug":"好玩的音乐社区","date":"2016-02-16T13:02:08.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"心晴/好玩的音乐社区/","link":"","permalink":"http://cxuef.github.io/心晴/好玩的音乐社区/","excerpt":"没有音乐细胞的我，偶尔心还是会静下心来听听歌的O(∩_∩)O~以下是我觉得比较好的听歌去处，mark for fun1.啪啪音乐圈2.Music for programming3.网易云音乐4.echo音乐","text":"没有音乐细胞的我，偶尔心还是会静下心来听听歌的O(∩_∩)O~以下是我觉得比较好的听歌去处，mark for fun1.啪啪音乐圈2.Music for programming3.网易云音乐4.echo音乐 啪啪音乐圈 Music for programmingMusic For Programming：编程时的背景音乐下载 网易云音乐 echo音乐","categories":[{"name":"心晴","slug":"心晴","permalink":"http://cxuef.github.io/categories/心晴/"}],"tags":[{"name":"music","slug":"music","permalink":"http://cxuef.github.io/tags/music/"}]},{"title":"My Valentine's Day of 2016","slug":"My-Valentine-s-Day-of-2016","date":"2016-02-14T12:07:48.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"心晴/My-Valentine-s-Day-of-2016/","link":"","permalink":"http://cxuef.github.io/心晴/My-Valentine-s-Day-of-2016/","excerpt":"","text":"2016本命年的情人节，我是在火车上渡过的。遇见一位美女，我俩因为老奶奶的一句话“这个土鸡蛋可不是吃塑料的（饲料）”，笑个不停；结识一位同龄帅哥，畅饮了两罐雪津啤酒，谈谈各自的人生。我想或许这就是上天给我的礼物吧，O(∩_∩)O哈哈~本来我还在因为买不到动车的票甚至慢车也只有硬座而要呆坐25个小时而懊恼呢，但是硬座确实能遇见很多很多（有趣、奇葩……的）人。我挺开心的 ^∇^","categories":[{"name":"心晴","slug":"心晴","permalink":"http://cxuef.github.io/categories/心晴/"}],"tags":[{"name":"遇见","slug":"遇见","permalink":"http://cxuef.github.io/tags/遇见/"},{"name":"旅行","slug":"旅行","permalink":"http://cxuef.github.io/tags/旅行/"}]},{"title":"Complete Android Fragment & Activity Lifecycle","slug":"Complete-Android-Fragment-Activity-Lifecycle","date":"2016-02-01T13:13:27.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"android/Complete-Android-Fragment-Activity-Lifecycle/","link":"","permalink":"http://cxuef.github.io/android/Complete-Android-Fragment-Activity-Lifecycle/","excerpt":"After struggling with trying to figure out how various pieces fit together, I’ve done some research and put together the complete Android Activity/Fragment lifecycle chart. This has two parallel lifecycles (activities and fragments) which are organized vertically by time. Lifecycle stages will occur in the vertical order in which they’re displayed, across activities and fragments. In this way, you can see how your fragments interact with your activities.","text":"After struggling with trying to figure out how various pieces fit together, I’ve done some research and put together the complete Android Activity/Fragment lifecycle chart. This has two parallel lifecycles (activities and fragments) which are organized vertically by time. Lifecycle stages will occur in the vertical order in which they’re displayed, across activities and fragments. In this way, you can see how your fragments interact with your activities. note: A PreferenceFragment doesn’t have a its own Context object. If you need a Context object, you can call getActivity(). However, be careful to call getActivity() only when the fragment is attached to an activity. When the fragment is not yet attached, or was detached during the end of its lifecycle, getActivity() will return null.","categories":[{"name":"android","slug":"android","permalink":"http://cxuef.github.io/categories/android/"}],"tags":[{"name":"Fragment","slug":"Fragment","permalink":"http://cxuef.github.io/tags/Fragment/"},{"name":"Activity","slug":"Activity","permalink":"http://cxuef.github.io/tags/Activity/"}]},{"title":"一棵开花的树","slug":"一棵开花的树","date":"2016-01-29T12:52:19.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"心晴/一棵开花的树/","link":"","permalink":"http://cxuef.github.io/心晴/一棵开花的树/","excerpt":"《一棵开花的树》是席慕蓉（穆伦·席连勃）于1980年10月4日创作的一首抒情诗。作者通过对一棵开花的树的描写来表达作者对于自然的感悟。即生命是不断的经过、经过、经过，她写的东西都是在生命现场里所得到的触动。诗之灵魂在于情，情真意切才有诗。席慕容的《一棵开花的树》把一位少女的怀春之心表现得情真意切，震撼人心，一花一叶都充盈着爱意，将“ 我” 对“ 你”的纯真的爱淋漓尽致地表达了出来。这不是失恋的悲歌，而是对真挚的爱的热烈祈求。这首诗始终紧扣着一棵开花的树来写，意象单纯，抒情真切，音韵和谐，艺术水平很高。","text":"《一棵开花的树》是席慕蓉（穆伦·席连勃）于1980年10月4日创作的一首抒情诗。作者通过对一棵开花的树的描写来表达作者对于自然的感悟。即生命是不断的经过、经过、经过，她写的东西都是在生命现场里所得到的触动。诗之灵魂在于情，情真意切才有诗。席慕容的《一棵开花的树》把一位少女的怀春之心表现得情真意切，震撼人心，一花一叶都充盈着爱意，将“ 我” 对“ 你”的纯真的爱淋漓尽致地表达了出来。这不是失恋的悲歌，而是对真挚的爱的热烈祈求。这首诗始终紧扣着一棵开花的树来写，意象单纯，抒情真切，音韵和谐，艺术水平很高。 一棵开花的树&#160;&#160;&#160;&#160;台湾 席慕容 如何， 让你遇见我？在我最美丽的时刻。为这——我已在佛前 求了五百年，求它让我们结一段尘缘。佛于是把我化做一棵树，长在你必经的路旁。阳光下，慎重地开满了花，朵朵都是我前世的盼望！当你走近，请你细听，那颤抖的叶，是我等待的热情！而当你终于无视地走过，在你身后落了一地的……朋友啊！那不是花瓣，是我凋零的心。","categories":[{"name":"心晴","slug":"心晴","permalink":"http://cxuef.github.io/categories/心晴/"}],"tags":[{"name":"诗词","slug":"诗词","permalink":"http://cxuef.github.io/tags/诗词/"}]},{"title":"马克飞象Markdown语法","slug":"马克飞象Markdown语法","date":"2016-01-29T04:13:12.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/马克飞象Markdown语法/","link":"","permalink":"http://cxuef.github.io/devtools/马克飞象Markdown语法/","excerpt":"欢迎使用马克飞象@(示例笔记本)[马克飞象|帮助|Markdown] 马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： 功能丰富 ：支持高亮代码块、LaTeX 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手； 得心应手 ：简洁高效的编辑器，提供桌面客户端以及离线Chrome App，支持移动端 Web； 深度整合 ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。","text":"欢迎使用马克飞象@(示例笔记本)[马克飞象|帮助|Markdown] 马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： 功能丰富 ：支持高亮代码块、LaTeX 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手； 得心应手 ：简洁高效的编辑器，提供桌面客户端以及离线Chrome App，支持移动端 Web； 深度整合 ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。 [TOC] Markdown简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科 正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按Ctrl + /查看帮助。 代码块12345678910@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' LaTeX 公式可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式： $$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ 表格 Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234 流程图12345678st=&gt;start: Starte=&gt;endop=&gt;operation: My Operationcond=&gt;condition: Yes or No?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 以及时序图: 123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 提示：想了解更多，请查看流程图语法以及时序图语法。 复选框使用 - [ ] 和 - [x] 语法可以创建复选框，实现 todo-list 等功能。例如： 已完成事项 待办事项1 待办事项2 注意：目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在马克飞象中修改 Markdown 原文才可生效。下个版本将会全面支持。 印象笔记相关笔记本和标签马克飞象增加了@(笔记本)[标签A|标签B]语法, 以选择笔记本和添加标签。 绑定账号后， 输入(自动会出现笔记本列表，请从中选择。 笔记标题马克飞象会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 欢迎使用马克飞象。 快捷编辑保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到马克飞象中打开并编辑该笔记。 注意：目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。 数据同步马克飞象通过将Markdown原文以隐藏内容保存在笔记中的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。 隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。 离线存储马克飞象使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过文档管理打开。 注意：虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，请务必经常及时同步到印象笔记。 编辑器相关设置右侧系统菜单（快捷键Ctrl + M）的设置中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。 快捷键帮助 Ctrl + /同步文档 Ctrl + S创建文档 Ctrl + Alt + N最大化编辑器 Ctrl + Enter预览文档 Ctrl + Alt + Enter文档管理 Ctrl + O系统菜单 Ctrl + M 加粗 Ctrl + B插入图片 Ctrl + G插入链接 Ctrl + L提升标题 Ctrl + H 关于试用马克飞象为新用户提供 10 天的试用期，试用期过后将不能同步新的笔记。之前保存过的笔记依然可以编辑。 反馈与建议 微博：@马克飞象，@GGock 感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。 [^demo]: 这是一个示例脚注。请查阅 MultiMarkdown 文档 关于脚注的说明。 限制： 印象笔记的笔记内容使用 ENML 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致脚注和TOC无法正常点击。","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://cxuef.github.io/tags/Markdown/"}]},{"title":"Hello Eirot hexo !","slug":"Hello-Eirot-hexo","date":"2016-01-27T12:29:37.000Z","updated":"2018-03-06T02:17:32.000Z","comments":true,"path":"devtools/Hello-Eirot-hexo/","link":"","permalink":"http://cxuef.github.io/devtools/Hello-Eirot-hexo/","excerpt":"","text":"hexo-theme-yilia 是为 hexo 2.4+制作的主题。响应式设计，风格简约。终于从octopress迁移到hexo。Yilia是自己设计的主题，分享之，有爱请自取。关于主题：我喜欢简约。所以标签云，搜索框都拿掉了接地气一点。所以用上了jiathis分享，友言评论，以及baidu的cdn让大家把注意力放到内容上, 这是本主题设计初衷主题不支持IE6，7，8。以后也不会!接下来，你就可以用喜爱的编辑器尽情书写你的文章。关于markdown语法，可以参考我的文章Markdown简明语法。","categories":[{"name":"devtools","slug":"devtools","permalink":"http://cxuef.github.io/categories/devtools/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://cxuef.github.io/tags/Hexo/"}]}]}